{"version":3,"sources":["Highscore/GithubLogo.png","Objects/Body.js","Objects/Food.js","firebase.js","Winningdialog/index.js","Highscore/index.js","Game.js","index.js"],"names":["module","exports","props","snake_body_element","map","element","i","position","top","left","className","key","style","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","WinningDialog","onSaveScore","e","firestore","collection","add","name","state","highscore","score","onClose","onNewGame","onNameChange","bind","this","setState","target","value","winningDialog","limit","type","id","onChange","onClick","isOpen","Component","Highscore","names","useState","cat","setTimes","useEffect","unsubscribe","orderBy","onSnapshot","snapshot","newData","docs","doc","data","useTimes","namesLast","length","lastValue","href","width","height","src","logo","startingGrid","Game","speed","food","getStandardFoodCoordinates","snakeBody","isWinningDialog","direction","previousBody","reset","getLastValue","movement","bodyElements","head","push","shift","checkBorderHit","checkBodyElementHit","checkIfFoodHit","onKeyPressed","window","event","keyCode","Math","floor","random","coordinates","status","setInterval","document","onkeydown","gameOver","pop","forEach","bodyElement","newBody","unshift","getNewFoodCoordinates","Body","Food","category","ReactDOM","render","StrictMode","getElementById"],"mappings":"kFAAAA,EAAOC,QAAU,IAA0B,wC,kNCE5B,G,MAAA,SAACC,GACd,OACE,6BACGA,EAAMC,mBAAmBC,KAAI,SAACC,EAASC,GACtC,IAAMC,EAAW,CACfC,IAAI,GAAD,OAAKH,EAAQ,GAAb,KACHI,KAAK,GAAD,OAAKJ,EAAQ,GAAb,MAEN,OACE,yBAAKK,UAAU,qBAAqBC,IAAKL,EAAGM,MAAOL,UCT9C,WAACL,GACd,IAAMK,EAAW,CACfC,IAAI,GAAD,OAAKN,EAAMK,SAAS,GAApB,KACHE,KAAK,GAAD,OAAKP,EAAMK,SAAS,GAApB,MAEN,OAAO,yBAAKG,UAAU,OAAOE,MAAOL,K,sCCOtCM,IAASC,cAXY,CACnBC,OAAQ,0CACRC,WAAY,8BACZC,YAAa,qCACbC,UAAW,cACXC,cAAe,0BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAKFT,QAAf,EC6CeU,E,kDAxDb,WAAYrB,GAAQ,IAAD,8BACjB,cAAMA,IAaRsB,YAAc,SAACC,GACbZ,EAASa,YAAYC,WAAW,SAASC,IAAI,CAC3CC,KAAM,EAAKC,MAAMD,KACjBE,UAAW,EAAK7B,MAAM8B,QAExB,EAAK9B,MAAM+B,UACX,EAAK/B,MAAMgC,aAlBX,EAAKJ,MAAQ,CACXD,KAAM,IAER,EAAKM,aAAe,EAAKA,aAAaC,KAAlB,gBALH,E,yDAQNX,GACXY,KAAKC,SAAS,CACZT,KAAMJ,EAAEc,OAAOC,U,+BAcjB,IAAIC,EACF,yBAAK/B,UAAU,iBACb,yBAAKA,UAAU,WAAf,kCACkC2B,KAAKnC,MAAM8B,MAD7C,SAGwB,IAAtBK,KAAKnC,MAAMwC,OAAgBL,KAAKnC,MAAMwC,MAAQL,KAAKnC,MAAM8B,QACzD,6BACE,2BAAOW,KAAK,OAAOC,GAAG,OAAOC,SAAUR,KAAKF,eAC5C,4BAAQzB,UAAU,UAAUkC,GAAG,OAAOE,QAAST,KAAKb,aAApD,kBAMJ,6BACE,4BACEd,UAAU,UACVkC,GAAG,UACHE,QAAST,KAAKnC,MAAMgC,WAHtB,cAcN,OAHKG,KAAKnC,MAAM6C,SACdN,EAAgB,MAEX,6BAAMA,O,GAtDWO,a,yCCsB5B,IAoCeC,EApCG,SAAC/C,GACjB,IAAMgD,EAtBR,WAAqB,IAAD,EACMC,mBAAS,IADf,mBACXC,EADW,KACNC,EADM,KAkBlB,OAfAC,qBAAU,WACR,IAAMC,EAAc1C,EACjBa,YACAC,WAAW,SACX6B,QAAQ,YAAa,QACrBd,MAAM,IACNe,YAAW,SAACC,GACX,IAAMC,EAAUD,EAASE,KAAKxD,KAAI,SAACyD,GAAD,oBAChCjB,GAAIiB,EAAIjB,IACLiB,EAAIC,WAETT,EAASM,MAEb,OAAO,kBAAMJ,OACZ,CAAC,UACGH,EAIOW,GAEVC,EAAY,EAShB,OANEA,EADEd,EAAMe,OAAS,IACJ,EAEDf,EAAM,IAAMA,EAAM,GAAGnB,UAEnC7B,EAAMgE,UAAUF,GAGd,6BACE,yBAAKtD,UAAU,QACb,yBAAKA,UAAU,SAAf,cACA,4BACGwC,EAAM9C,KAAI,SAAC0D,GAAD,OACT,wBAAIpD,UAAU,OAAOC,IAAKmD,EAAKlB,IAC7B,6BACE,yBAAKlC,UAAU,QAAQoD,EAAKjC,MAC5B,yBAAKnB,UAAU,SAASoD,EAAK/B,kBAMvC,yBAAKrB,UAAU,QACb,uBAAGyD,KAAK,sCACL,IACD,yBAAKC,MAAM,MAAMC,OAAO,KAAKC,IAAKC,UC/CtCC,EAAe,CACnB,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAoLSC,E,4MAjLb3C,MAAQ,CACN4C,MAAO,IACPC,KAAM,EAAKC,6BACXC,UAAWL,EACXM,iBAAiB,EACjBC,UAAW,QACXrC,MAAO,G,EAETA,MAAQ,E,EACRsC,aAAe,EAAKH,U,EAEpBI,MAAQ,WACN,EAAK3C,SAAS,CACZoC,MAAO,IACPC,KAAM,EAAKC,6BACXC,UAAWL,EACXM,iBAAiB,EACjBC,UAAW,W,EAIfG,aAAe,SAAClD,GACd,EAAKU,MAAQV,G,EAuEfmD,SAAW,WACT,IAAIC,EAAY,YAAO,EAAKtD,MAAM+C,WAC9BQ,EAAOD,EAAaA,EAAanB,OAAS,GAE9C,OAAQ,EAAKnC,MAAMiD,WACjB,IAAK,QACHM,EAAO,CAACA,EAAK,GAAK,EAAGA,EAAK,IAC1B,MACF,IAAK,OACHA,EAAO,CAACA,EAAK,GAAK,EAAGA,EAAK,IAC1B,MACF,IAAK,OACHA,EAAO,CAACA,EAAK,GAAIA,EAAK,GAAK,GAC3B,MACF,IAAK,KACHA,EAAO,CAACA,EAAK,GAAIA,EAAK,GAAK,GAI/BD,EAAaE,KAAKD,GAClBD,EAAaG,QACY,IAArB,EAAKzD,MAAM4C,QACb,EAAKM,aAAe,EAAKlD,MAAM+C,UAC/B,EAAKvC,SAAS,CACZuC,UAAWO,KAGf,EAAKI,iBACL,EAAKC,sBACL,EAAKC,kB,EAGPC,aAAe,SAAClE,GAEd,QADAA,EAAIA,GAAKmE,OAAOC,OACNC,SACR,KAAK,GACL,KAAK,GACL,KAAK,GACH,EAAKxD,SAAS,CAAEyC,UAAW,UAC3B,MACF,KAAK,GACL,KAAK,GACL,KAAK,GACH,EAAKzC,SAAS,CAAEyC,UAAW,SAC3B,MACF,KAAK,GACL,KAAK,GACL,KAAK,GACH,EAAKzC,SAAS,CAAEyC,UAAW,SAC3B,MACF,KAAK,GACL,KAAK,GACL,KAAK,IACH,EAAKzC,SAAS,CAAEyC,UAAW,S,2EAxH/B,MAAO,CACgD,EAArDgB,KAAKC,OAAO,GAAAD,KAAKE,SAA0B,GAAK,GACK,EAArDF,KAAKC,OAAO,GAAAD,KAAKE,SAA0B,GAAK,M,8CAKlD,IAAIC,EAAc7D,KAAKuC,6BACnBQ,EAAY,YAAO/C,KAAKP,MAAM+C,WAC9BsB,EAAS,OAEb,EAAG,CACDA,EAAS,OACT,IAAK,IAAI7F,EAAI,EAAGA,EAAI8E,EAAanB,OAAQ3D,IAAK,CAC5C,IAAID,EAAU+E,EAAa9E,GACvB4F,EAAY,KAAO7F,EAAQ,IAAM6F,EAAY,KAAO7F,EAAQ,KAC9D8F,EAAS,OAGE,QAAXA,IACFD,EAAc7D,KAAKuC,oCAEH,SAAXuB,GAET,OAAOD,I,0CAIPE,YAAY/D,KAAK8C,SAAU9C,KAAKP,MAAM4C,OACtC2B,SAASC,UAAYjE,KAAKsD,e,uCAI1B,IAAIN,EAAOhD,KAAKP,MAAM+C,UAAUxC,KAAKP,MAAM+C,UAAUZ,OAAS,IAC1DoB,EAAK,IAAM,KAAOA,EAAK,IAAM,KAAOA,EAAK,GAAK,GAAKA,EAAK,GAAK,IAC/DhD,KAAKkE,a,4CAIc,IAAD,OAChBnB,EAAY,YAAO/C,KAAKP,MAAM+C,WAC9BQ,EAAOD,EAAaA,EAAanB,OAAS,GAC9CmB,EAAaoB,MACbpB,EAAaqB,SAAQ,SAACC,GAChBrB,EAAK,KAAOqB,EAAY,IAAMrB,EAAK,KAAOqB,EAAY,IACxD,EAAKH,gB,iCAMTlE,KAAKC,SAAS,CAAEoC,MAAO,EAAGG,UAAWxC,KAAK2C,eAC1C3C,KAAKC,SAAS,CACZwC,iBAAiB,M,uCAKnB,IAAIO,EAAOhD,KAAKP,MAAM+C,UAAUxC,KAAKP,MAAM+C,UAAUZ,OAAS,GAC1DU,EAAOtC,KAAKP,MAAM6C,KACtB,GAAIA,EAAK,KAAOU,EAAK,IAAMV,EAAK,KAAOU,EAAK,GAAI,CAC9C,IAAIsB,EAAO,YAAOtE,KAAKP,MAAM+C,WAC7B8B,EAAQC,QAAQ,IAChBvE,KAAKC,SAAS,CAAEuC,UAAW8B,EAAShC,KAAMtC,KAAKwE,6B,+BA8DzC,IAAD,OACP,OACE,yBAAKnG,UAAU,QACb,yBAAKA,UAAU,SACb,kBAACoG,EAAD,CAAM3G,mBAAoBkC,KAAKP,MAAM+C,YACrC,kBAACkC,EAAD,CAAMxG,SAAU8B,KAAKP,MAAM6C,OAC3B,yBAAKjE,UAAU,iBACb,kBAAC,EAAD,CACEsG,SAAU3E,KAAKP,MAAMkF,SACrBjE,OAAQV,KAAKP,MAAMgD,gBACnB7C,QAAS,SAACR,GAAD,OAAO,EAAKa,SAAS,CAAEwC,iBAAiB,KACjD5C,UAAWG,KAAK4C,MAChBjD,MAAOK,KAAKP,MAAM+C,UAAUZ,OAC5BvB,MAAOL,KAAKK,UAIlB,yBAAKhC,UAAU,aACb,wBAAIkC,GAAG,SAAP,SACA,kBAAC,EAAD,CAAWsB,UAAW7B,KAAK6C,qB,GA3KlBlC,aCVnBiE,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFd,SAASe,eAAe,W","file":"static/js/main.7738d41a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/GithubLogo.9b038c37.png\";","import React from \"react\";\r\n\r\nexport default (props) => {\r\n  return (\r\n    <div>\r\n      {props.snake_body_element.map((element, i) => {\r\n        const position = {\r\n          top: `${element[1]}%`,\r\n          left: `${element[0]}%`,\r\n        };\r\n        return (\r\n          <div className=\"snake_body_element\" key={i} style={position}></div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport default (props) => {\r\n  const position = {\r\n    top: `${props.position[1]}%`,\r\n    left: `${props.position[0]}%`,\r\n  };\r\n  return <div className=\"food\" style={position}></div>;\r\n};\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyBq2lqoUMDNP01NnIfOuZWf-Jp7sFydzvA\",\r\n  authDomain: \"snake-ede56.firebaseapp.com\",\r\n  databaseURL: \"https://snake-ede56.firebaseio.com\",\r\n  projectId: \"snake-ede56\",\r\n  storageBucket: \"snake-ede56.appspot.com\",\r\n  messagingSenderId: \"750114326004\",\r\n  appId: \"1:750114326004:web:980863df23d2b65700e5a1\",\r\n  measurementId: \"G-LXSF6QJPRH\",\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;\r\n","import React, { Component } from \"react\";\r\nimport \"./index.css\";\r\nimport firebase from \"../firebase\";\r\n\r\nclass WinningDialog extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n    };\r\n    this.onNameChange = this.onNameChange.bind(this);\r\n  }\r\n\r\n  onNameChange(e) {\r\n    this.setState({\r\n      name: e.target.value,\r\n    });\r\n  }\r\n\r\n  onSaveScore = (e) => {\r\n    firebase.firestore().collection(\"names\").add({\r\n      name: this.state.name,\r\n      highscore: this.props.score,\r\n    });\r\n    this.props.onClose();\r\n    this.props.onNewGame();\r\n  };\r\n\r\n  render() {\r\n    let winningDialog = (\r\n      <div className=\"winningStyles\">\r\n        <div className=\"Message\">\r\n          Congratulations, your score is {this.props.score}!!!\r\n        </div>\r\n        {(this.props.limit === -1 || this.props.limit < this.props.score) && (\r\n          <div>\r\n            <input type=\"text\" id=\"name\" onChange={this.onNameChange}></input>\r\n            <button className=\"buttons\" id=\"save\" onClick={this.onSaveScore}>\r\n              Save my score\r\n            </button>\r\n          </div>\r\n        )}\r\n\r\n        <div>\r\n          <button\r\n            className=\"buttons\"\r\n            id=\"newgame\"\r\n            onClick={this.props.onNewGame}\r\n          >\r\n            New Game\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    if (!this.props.isOpen) {\r\n      winningDialog = null;\r\n    }\r\n    return <div>{winningDialog}</div>;\r\n  }\r\n}\r\nexport default WinningDialog;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./index.css\";\r\nimport firebase from \"../firebase\";\r\nimport logo from \"./GithubLogo.png\";\r\n\r\nfunction useTimes() {\r\n  const [cat, setTimes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = firebase\r\n      .firestore()\r\n      .collection(\"names\")\r\n      .orderBy(\"highscore\", \"desc\")\r\n      .limit(10)\r\n      .onSnapshot((snapshot) => {\r\n        const newData = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        }));\r\n        setTimes(newData);\r\n      });\r\n    return () => unsubscribe();\r\n  }, [\"names\"]);\r\n  return cat;\r\n}\r\n\r\nconst Highscore = (props) => {\r\n  const names = useTimes(\"names\");\r\n\r\n  var namesLast = 0;\r\n\r\n  if (names.length < 10) {\r\n    namesLast = -1;\r\n  } else {\r\n    namesLast = names[9] && names[9].highscore;\r\n  }\r\n  props.lastValue(namesLast);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"main\">\r\n        <div className=\"title\">Highscores</div>\r\n        <ol>\r\n          {names.map((data) => (\r\n            <li className=\"item\" key={data.id}>\r\n              <div>\r\n                <div className=\"name\">{data.name}</div>\r\n                <div className=\"score\">{data.highscore}</div>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ol>\r\n      </div>\r\n      <div className=\"logo\">\r\n        <a href=\"https://github.com/zotyovegh/Snake\">\r\n          {\" \"}\r\n          <img width=\"150\" height=\"35\" src={logo} />\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Highscore;\r\n","import React, { Component } from \"react\";\r\nimport \"./index.css\";\r\nimport Body from \"./Objects/Body\";\r\nimport Food from \"./Objects/Food\";\r\nimport WinningDialog from \"./Winningdialog\";\r\n\r\nimport Highscore from \"./Highscore\";\r\n\r\n//Each snake body element should have an x and y coordinate\r\nconst startingGrid = [\r\n  [0, 0],\r\n  [4, 0],\r\n  [8, 0],\r\n];\r\nclass Game extends Component {\r\n  state = {\r\n    speed: 150,\r\n    food: this.getStandardFoodCoordinates(),\r\n    snakeBody: startingGrid,\r\n    isWinningDialog: false,\r\n    direction: \"RIGHT\",\r\n    limit: 0,\r\n  };\r\n  limit = 0;\r\n  previousBody = this.snakeBody;\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      speed: 150,\r\n      food: this.getStandardFoodCoordinates(),\r\n      snakeBody: startingGrid,\r\n      isWinningDialog: false,\r\n      direction: \"RIGHT\",\r\n    });\r\n  };\r\n\r\n  getLastValue = (score) => {\r\n    this.limit = score;\r\n  };\r\n\r\n  getStandardFoodCoordinates() {\r\n    return [\r\n      Math.floor((Math.random() * (98 - 1 + 1) + 1) / 4) * 4,\r\n      Math.floor((Math.random() * (98 - 1 + 1) + 1) / 4) * 4,\r\n    ];\r\n  }\r\n\r\n  getNewFoodCoordinates() {\r\n    let coordinates = this.getStandardFoodCoordinates();\r\n    let bodyElements = [...this.state.snakeBody];\r\n    let status = \"good\";\r\n\r\n    do {\r\n      status = \"good\";\r\n      for (var i = 0; i < bodyElements.length; i++) {\r\n        let element = bodyElements[i];\r\n        if (coordinates[0] === element[0] && coordinates[1] === element[1]) {\r\n          status = \"bad\";\r\n        }\r\n      }\r\n      if (status === \"bad\") {\r\n        coordinates = this.getStandardFoodCoordinates();\r\n      }\r\n    } while (status !== \"good\");\r\n\r\n    return coordinates;\r\n  }\r\n\r\n  componentDidMount() {\r\n    setInterval(this.movement, this.state.speed);\r\n    document.onkeydown = this.onKeyPressed;\r\n  }\r\n\r\n  checkBorderHit() {\r\n    let head = this.state.snakeBody[this.state.snakeBody.length - 1];\r\n    if (head[0] >= 100 || head[1] >= 100 || head[0] < 0 || head[1] < 0) {\r\n      this.gameOver();\r\n    }\r\n  }\r\n\r\n  checkBodyElementHit() {\r\n    let bodyElements = [...this.state.snakeBody];\r\n    let head = bodyElements[bodyElements.length - 1];\r\n    bodyElements.pop();\r\n    bodyElements.forEach((bodyElement) => {\r\n      if (head[0] === bodyElement[0] && head[1] === bodyElement[1]) {\r\n        this.gameOver();\r\n      }\r\n    });\r\n  }\r\n\r\n  gameOver() {\r\n    this.setState({ speed: 0, snakeBody: this.previousBody });\r\n    this.setState({\r\n      isWinningDialog: true,\r\n    });\r\n  }\r\n\r\n  checkIfFoodHit() {\r\n    let head = this.state.snakeBody[this.state.snakeBody.length - 1];\r\n    let food = this.state.food;\r\n    if (food[0] === head[0] && food[1] === head[1]) {\r\n      let newBody = [...this.state.snakeBody];\r\n      newBody.unshift([]);\r\n      this.setState({ snakeBody: newBody, food: this.getNewFoodCoordinates() });\r\n    }\r\n  }\r\n\r\n  movement = () => {\r\n    let bodyElements = [...this.state.snakeBody];\r\n    let head = bodyElements[bodyElements.length - 1];\r\n\r\n    switch (this.state.direction) {\r\n      case \"RIGHT\":\r\n        head = [head[0] + 4, head[1]];\r\n        break;\r\n      case \"LEFT\":\r\n        head = [head[0] - 4, head[1]];\r\n        break;\r\n      case \"DOWN\":\r\n        head = [head[0], head[1] + 4];\r\n        break;\r\n      case \"UP\":\r\n        head = [head[0], head[1] - 4];\r\n        break;\r\n    }\r\n\r\n    bodyElements.push(head);\r\n    bodyElements.shift();\r\n    if (this.state.speed !== 0) {\r\n      this.previousBody = this.state.snakeBody;\r\n      this.setState({\r\n        snakeBody: bodyElements,\r\n      });\r\n    }\r\n    this.checkBorderHit();\r\n    this.checkBodyElementHit();\r\n    this.checkIfFoodHit();\r\n  };\r\n\r\n  onKeyPressed = (e) => {\r\n    e = e || window.event;\r\n    switch (e.keyCode) {\r\n      case 39:\r\n      case 68:\r\n      case 99:\r\n        this.setState({ direction: \"RIGHT\" });\r\n        break;\r\n      case 37:\r\n      case 65:\r\n      case 97:\r\n        this.setState({ direction: \"LEFT\" });\r\n        break;\r\n      case 40:\r\n      case 83:\r\n      case 98:\r\n        this.setState({ direction: \"DOWN\" });\r\n        break;\r\n      case 38:\r\n      case 87:\r\n      case 101:\r\n        this.setState({ direction: \"UP\" });\r\n        break;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"board\">\r\n          <Body snake_body_element={this.state.snakeBody} />\r\n          <Food position={this.state.food} />\r\n          <div className=\"winningDialog\">\r\n            <WinningDialog\r\n              category={this.state.category}\r\n              isOpen={this.state.isWinningDialog}\r\n              onClose={(e) => this.setState({ isWinningDialog: false })}\r\n              onNewGame={this.reset}\r\n              score={this.state.snakeBody.length}\r\n              limit={this.limit}\r\n            ></WinningDialog>\r\n          </div>\r\n        </div>\r\n        <div className=\"highscore\">\r\n          <h1 id=\"title\">Snake</h1>\r\n          <Highscore lastValue={this.getLastValue} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Game from './Game';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Game />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}