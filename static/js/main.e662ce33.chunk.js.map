{"version":3,"sources":["Objects/Body.js","Objects/Food.js","Game.js","index.js"],"names":["props","snake_body_element","map","element","i","position","top","left","className","key","style","Game","state","speed","food","getFoodCoordinates","snakeBody","direction","previousBody","movement","bodyElements","head","length","push","shift","setState","checkBorderHit","checkBodyElementHit","checkIfFoodHit","onKeyPressed","e","window","event","keyCode","Body","this","Food","Math","floor","random","setInterval","document","onkeydown","pop","forEach","bodyElement","newBody","unshift","Component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e662ce33.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default (props) => {\r\n  return (\r\n    <div>\r\n      {props.snake_body_element.map((element, i) => {\r\n        const position = {\r\n          top: `${element[1]}%`,\r\n          left: `${element[0]}%`,\r\n        };\r\n        return (\r\n          <div className=\"snake_body_element\" key={i} style={position}></div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport default (props) => {\r\n  const position = {\r\n    top: `${props.position[1]}%`,\r\n    left: `${props.position[0]}%`,\r\n  };\r\n  return <div className=\"food\" style={position}></div>;\r\n};\r\n","import React, { Component } from \"react\";\r\nimport \"./index.css\";\r\nimport Body from \"./Objects/Body\";\r\nimport Food from \"./Objects/Food\";\r\n\r\n//Each snake body element should have an x and y coordinate\r\n\r\nclass Game extends Component {\r\n  state = {\r\n    speed: 100,\r\n    food: this.getFoodCoordinates(),\r\n    snakeBody: [\r\n      [0, 0],\r\n      [2, 0],\r\n      [4, 0],\r\n    ],\r\n\r\n    direction: \"RIGHT\",\r\n  };\r\n\r\n  previousBody = this.snakeBody;\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"board\">\r\n        <Body snake_body_element={this.state.snakeBody} />\r\n        <Food position={this.state.food} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getFoodCoordinates() {\r\n    return [\r\n      Math.floor((Math.random() * (98 - 1 + 1) + 1) / 2) * 2,\r\n      Math.floor((Math.random() * (98 - 1 + 1) + 1) / 2) * 2,\r\n    ];\r\n  }\r\n\r\n  componentDidMount() {\r\n    setInterval(this.movement, this.state.speed);\r\n    document.onkeydown = this.onKeyPressed;\r\n  }\r\n\r\n  checkBorderHit() {\r\n    let head = this.state.snakeBody[this.state.snakeBody.length - 1];\r\n    if (head[0] >= 100 || head[1] >= 100 || head[0] < 0 || head[1] < 0) {\r\n      this.setState({ speed: 0, snakeBody: this.previousBody });\r\n    }\r\n  }\r\n\r\n  checkBodyElementHit() {\r\n    let bodyElements = [...this.state.snakeBody];\r\n    let head = bodyElements[bodyElements.length - 1];\r\n    bodyElements.pop();\r\n    bodyElements.forEach((bodyElement) => {\r\n      if (head[0] == bodyElement[0] && head[1] == bodyElement[1]) {\r\n        this.setState({ speed: 0, snakeBody: this.previousBody });\r\n      }\r\n    });\r\n  }\r\n\r\n  checkIfFoodHit() {\r\n    let head = this.state.snakeBody[this.state.snakeBody.length - 1];\r\n    let food = this.state.food;\r\n    if (food[0] == head[0] && food[1] == head[1]) {\r\n      let newBody = [...this.state.snakeBody];\r\n      newBody.unshift([]);\r\n      this.setState({ snakeBody: newBody, food: this.getFoodCoordinates() });\r\n    }\r\n  }\r\n\r\n  movement = () => {\r\n    let bodyElements = [...this.state.snakeBody];\r\n    let head = bodyElements[bodyElements.length - 1];\r\n\r\n    switch (this.state.direction) {\r\n      case \"RIGHT\":\r\n        head = [head[0] + 2, head[1]];\r\n        break;\r\n      case \"LEFT\":\r\n        head = [head[0] - 2, head[1]];\r\n        break;\r\n      case \"DOWN\":\r\n        head = [head[0], head[1] + 2];\r\n        break;\r\n      case \"UP\":\r\n        head = [head[0], head[1] - 2];\r\n        break;\r\n    }\r\n\r\n    bodyElements.push(head);\r\n    bodyElements.shift();\r\n    if (this.state.speed !== 0) {\r\n      this.previousBody = this.state.snakeBody;\r\n      this.setState({\r\n        snakeBody: bodyElements,\r\n      });\r\n    }\r\n    this.checkBorderHit();\r\n    this.checkBodyElementHit();\r\n    this.checkIfFoodHit();\r\n  };\r\n\r\n  onKeyPressed = (e) => {\r\n    e = e || window.event;\r\n    switch (e.keyCode) {\r\n      case 39:\r\n        this.setState({ direction: \"RIGHT\" });\r\n        break;\r\n      case 37:\r\n        this.setState({ direction: \"LEFT\" });\r\n        break;\r\n      case 40:\r\n        this.setState({ direction: \"DOWN\" });\r\n        break;\r\n      case 38:\r\n        this.setState({ direction: \"UP\" });\r\n        break;\r\n    }\r\n  };\r\n}\r\n\r\nexport default Game;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Game from './Game';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Game />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}